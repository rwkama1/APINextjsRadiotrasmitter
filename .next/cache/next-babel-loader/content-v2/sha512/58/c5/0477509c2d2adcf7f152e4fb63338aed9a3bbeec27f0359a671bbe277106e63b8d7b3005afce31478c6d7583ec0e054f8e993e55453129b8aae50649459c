{"ast":null,"code":"import cors from \"../cors\";\nimport { FactoryLogic } from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\nexport default async function (req, res) {\n  if (req.method === \"GET\") {\n    try {\n      await cors(req, res);\n      const getad = await FactoryLogic.getLogicCampaign().getOwnCampaigns();\n      res.send(getad);\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not search campaign\",\n          error: error.toString()\n        }\n      });\n    }\n  }\n\n  if (req.method === \"POST\") {\n    try {\n      const data = req.body;\n      await cors(req, res);\n      const getad = await FactoryLogic.getLogicCampaign().getECampaignByTitleLetter(data.exp);\n      res.send(getad);\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not search campaign\",\n          error: error.toString()\n        }\n      });\n    }\n  }\n\n  return res.status(405).json({\n    msg: \"Method not implemented\"\n  });\n}","map":{"version":3,"sources":["C:/Users/Waldemar/Desktop/APINextRadiotrasmitter/pages/api/campaign/getowncampaigns.js"],"names":["cors","FactoryLogic","req","res","method","getad","getLogicCampaign","getOwnCampaigns","send","error","status","json","data","msg","toString","body","getECampaignByTitleLetter","exp"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAAQC,YAAR,QAA2B,0DAA3B;AAEA,eAAe,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACvC,MAAGD,GAAG,CAACE,MAAJ,KAAa,KAAhB,EACA;AACE,QACA;AAEA,YAAMJ,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AAEA,YAAME,KAAK,GAAC,MAAMJ,YAAY,CAACK,gBAAb,GAAgCC,eAAhC,EAAlB;AACAJ,MAAAA,GAAG,CAACK,IAAJ,CAASH,KAAT;AACC,KAPD,CAQA,OAAOI,KAAP,EAAc;AACZ,aAAON,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1BE,QAAAA,IAAI,EAAE;AAAEC,UAAAA,GAAG,EAAE,2BAAP;AAAoCJ,UAAAA,KAAK,EAACA,KAAK,CAACK,QAAN;AAA1C;AAFoB,OAArB,CAAP;AAID;AACF;;AACD,MAAGZ,GAAG,CAACE,MAAJ,KAAa,MAAhB,EACA;AACE,QACA;AACF,YAAMQ,IAAI,GAAGV,GAAG,CAACa,IAAjB;AACA,YAAMf,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AACA,YAAME,KAAK,GAAC,MAAMJ,YAAY,CAACK,gBAAb,GAAgCU,yBAAhC,CAA0DJ,IAAI,CAACK,GAA/D,CAAlB;AACAd,MAAAA,GAAG,CAACK,IAAJ,CAASH,KAAT;AACG,KAND,CAOF,OAAOI,KAAP,EAAc;AACV,aAAON,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1BE,QAAAA,IAAI,EAAE;AAAEC,UAAAA,GAAG,EAAE,2BAAP;AAAoCJ,UAAAA,KAAK,EAACA,KAAK,CAACK,QAAN;AAA1C;AAFoB,OAArB,CAAP;AAID;AACF;;AACC,SAAOX,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAArB,CAAP;AACD","sourcesContent":["import cors from \"../cors\";\r\nimport {FactoryLogic} from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\r\n\r\nexport default async function (req, res) {\r\n  if(req.method===\"GET\")\r\n  {\r\n    try\r\n    {\r\n   \r\n    await cors(req, res)\r\n    \r\n    const getad=await FactoryLogic.getLogicCampaign().getOwnCampaigns();\r\n    res.send(getad);\r\n    }\r\n    catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: { msg: \"Could not search campaign\", error:error.toString() }\r\n      });\r\n    }\r\n  }\r\n  if(req.method===\"POST\")\r\n  {\r\n    try\r\n    {\r\n  const data = req.body;\r\n  await cors(req, res)\r\n  const getad=await FactoryLogic.getLogicCampaign().getECampaignByTitleLetter(data.exp);\r\n  res.send(getad);\r\n    }\r\n  catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: { msg: \"Could not search campaign\", error:error.toString() }\r\n      });\r\n    }\r\n  }\r\n    return res.status(405).json({ msg: \"Method not implemented\"});\r\n  }"]},"metadata":{},"sourceType":"module"}