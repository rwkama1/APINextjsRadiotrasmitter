{"ast":null,"code":"import cors from \"../cors\";\nimport { FactoryLogic } from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\nexport default async function (req, res) {\n  if (req.method === \"GET\") {\n    try {\n      const {\n        prut\n      } = req.query;\n      await cors(req, res);\n      const rutparse = parseInt(prut);\n      const getad = await FactoryLogic.getLogicAdvertiser().getAdvertiser(rutparse);\n      res.send(getad);\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not search advertiser\",\n          error: error.toString()\n        }\n      });\n    }\n  }\n\n  if (req.method === \"POST\") {\n    try {\n      const data = req.body;\n      await cors(req, res);\n      const getad = await FactoryLogic.getLogicAdvertiser().getAdvertiserByNameLetter(data.exp);\n      res.send(getad);\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not search advertiser\",\n          error: error.toString()\n        }\n      });\n    }\n  }\n\n  return res.status(405).json({\n    msg: \"Method not implemented\"\n  });\n}","map":{"version":3,"sources":["C:/Users/Waldemar/Desktop/APINextRadiotrasmitter/pages/api/advertiser/getadvertiser.js"],"names":["cors","FactoryLogic","req","res","method","prut","query","rutparse","parseInt","getad","getLogicAdvertiser","getAdvertiser","send","error","status","json","data","msg","toString","body","getAdvertiserByNameLetter","exp"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAAQC,YAAR,QAA2B,0DAA3B;AAEA,eAAe,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACvC,MAAGD,GAAG,CAACE,MAAJ,KAAa,KAAhB,EACA;AACE,QACA;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAWH,GAAG,CAACI,KAArB;AACA,YAAMN,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AACA,YAAMI,QAAQ,GAACC,QAAQ,CAACH,IAAD,CAAvB;AACA,YAAMI,KAAK,GAAC,MAAMR,YAAY,CAACS,kBAAb,GAAkCC,aAAlC,CAAgDJ,QAAhD,CAAlB;AACAJ,MAAAA,GAAG,CAACS,IAAJ,CAASH,KAAT;AACC,KAPD,CAQA,OAAOI,KAAP,EAAc;AACZ,aAAOV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1BE,QAAAA,IAAI,EAAE;AAAEC,UAAAA,GAAG,EAAE,6BAAP;AAAsCJ,UAAAA,KAAK,EAACA,KAAK,CAACK,QAAN;AAA5C;AAFoB,OAArB,CAAP;AAID;AACF;;AACD,MAAGhB,GAAG,CAACE,MAAJ,KAAa,MAAhB,EACA;AACE,QACA;AACF,YAAMY,IAAI,GAAGd,GAAG,CAACiB,IAAjB;AACA,YAAMnB,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AACA,YAAMM,KAAK,GAAC,MAAMR,YAAY,CAACS,kBAAb,GAAkCU,yBAAlC,CAA4DJ,IAAI,CAACK,GAAjE,CAAlB;AACAlB,MAAAA,GAAG,CAACS,IAAJ,CAASH,KAAT;AACG,KAND,CAOF,OAAOI,KAAP,EAAc;AACV,aAAOV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1BE,QAAAA,IAAI,EAAE;AAAEC,UAAAA,GAAG,EAAE,6BAAP;AAAsCJ,UAAAA,KAAK,EAACA,KAAK,CAACK,QAAN;AAA5C;AAFoB,OAArB,CAAP;AAID;AACF;;AACC,SAAOf,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAArB,CAAP;AACD","sourcesContent":["import cors from \"../cors\";\r\nimport {FactoryLogic} from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\r\n\r\nexport default async function (req, res) {\r\n  if(req.method===\"GET\")\r\n  {\r\n    try\r\n    {\r\n    const { prut } = req.query;\r\n    await cors(req, res)\r\n    const rutparse=parseInt(prut);\r\n    const getad=await FactoryLogic.getLogicAdvertiser().getAdvertiser(rutparse);\r\n    res.send(getad);\r\n    }\r\n    catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: { msg: \"Could not search advertiser\", error:error.toString() }\r\n      });\r\n    }\r\n  }\r\n  if(req.method===\"POST\")\r\n  {\r\n    try\r\n    {\r\n  const data = req.body;\r\n  await cors(req, res)\r\n  const getad=await FactoryLogic.getLogicAdvertiser().getAdvertiserByNameLetter(data.exp);\r\n  res.send(getad);\r\n    }\r\n  catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: { msg: \"Could not search advertiser\", error:error.toString() }\r\n      });\r\n    }\r\n  }\r\n    return res.status(405).json({ msg: \"Method not implemented\"});\r\n  }\r\n\r\n  "]},"metadata":{},"sourceType":"module"}