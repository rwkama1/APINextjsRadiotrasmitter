{"ast":null,"code":"import cors from \"../cors\";\nimport { FactoryLogic } from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\nexport default async function (req, res) {\n  if (req.method === \"GET\") {\n    try {\n      const data = req.body;\n      await cors(req, res);\n      const rutparse = data.rut;\n      const getad = await FactoryLogic.getLogicAdvertiser().getAdvertiser(rutparse);\n      return res.send(getad);\n    } catch (error) {\n      return res.status(500).send(\"Could not search advertiser \" + error.message);\n    }\n  }\n\n  if (req.method === \"POST\") {\n    try {\n      const data = req.body;\n      await cors(req, res);\n      const getad = await FactoryLogic.getLogicAdvertiser().getAdvertiserByNameLetter(data.exp);\n      return res.send(getad);\n    } catch (error) {\n      return res.status(500).send(\"Could not search advertiser \" + error.message);\n    }\n  }\n\n  return res.status(405).json({\n    msg: \"Method not implemented\"\n  });\n}","map":{"version":3,"sources":["C:/Users/Waldemar/Desktop/APINextRadiotrasmitter/pages/api/advertiser/getadvertiser.js"],"names":["cors","FactoryLogic","req","res","method","data","body","rutparse","rut","getad","getLogicAdvertiser","getAdvertiser","send","error","status","message","getAdvertiserByNameLetter","exp","json","msg"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAAQC,YAAR,QAA2B,0DAA3B;AAEA,eAAe,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACvC,MAAGD,GAAG,CAACE,MAAJ,KAAa,KAAhB,EACA;AACE,QACA;AACE,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACF,YAAMN,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AACA,YAAMI,QAAQ,GAACF,IAAI,CAACG,GAApB;AACA,YAAMC,KAAK,GAAC,MAAMR,YAAY,CAACS,kBAAb,GAAkCC,aAAlC,CAAgDJ,QAAhD,CAAlB;AACF,aAAOJ,GAAG,CAACS,IAAJ,CAASH,KAAT,CAAP;AACG,KAPD,CAQA,OAAOI,KAAP,EAAc;AACZ,aAAOV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,iCAA+BC,KAAK,CAACE,OAA1D,CAAP;AACD;AACF;;AACD,MAAGb,GAAG,CAACE,MAAJ,KAAa,MAAhB,EACA;AACE,QACA;AACF,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,YAAMN,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AACA,YAAMM,KAAK,GAAC,MAAMR,YAAY,CAACS,kBAAb,GAAkCM,yBAAlC,CAA4DX,IAAI,CAACY,GAAjE,CAAlB;AACD,aAAOd,GAAG,CAACS,IAAJ,CAASH,KAAT,CAAP;AACI,KAND,CAOF,OAAOI,KAAP,EAAc;AACZ,aAAOV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,iCAA+BC,KAAK,CAACE,OAA1D,CAAP;AACC;AACF;;AACC,SAAOZ,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB,CAAP;AACD","sourcesContent":["import cors from \"../cors\";\r\nimport {FactoryLogic} from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\r\n\r\nexport default async function (req, res) {\r\n  if(req.method===\"GET\")\r\n  {\r\n    try\r\n    {\r\n      const data = req.body;\r\n    await cors(req, res)\r\n    const rutparse=data.rut;\r\n    const getad=await FactoryLogic.getLogicAdvertiser().getAdvertiser(rutparse);\r\n  return res.send(getad);\r\n    }\r\n    catch (error) {\r\n      return res.status(500).send(\"Could not search advertiser \"+error.message);\r\n    }\r\n  }\r\n  if(req.method===\"POST\")\r\n  {\r\n    try\r\n    {\r\n  const data = req.body;\r\n  await cors(req, res)\r\n  const getad=await FactoryLogic.getLogicAdvertiser().getAdvertiserByNameLetter(data.exp);\r\n return res.send(getad);\r\n    }\r\n  catch (error) {\r\n    return res.status(500).send(\"Could not search advertiser \"+error.message);\r\n    }\r\n  }\r\n    return res.status(405).json({ msg: \"Method not implemented\"});\r\n  }\r\n\r\n  "]},"metadata":{},"sourceType":"module"}