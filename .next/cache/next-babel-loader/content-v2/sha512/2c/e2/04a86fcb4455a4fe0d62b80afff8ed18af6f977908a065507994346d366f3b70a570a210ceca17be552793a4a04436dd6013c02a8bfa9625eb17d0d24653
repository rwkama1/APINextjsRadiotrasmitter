{"ast":null,"code":"import cors from \"../cors\";\nimport { FactoryLogic } from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\nexport default async function (req, res) {\n  if (req.method === \"GET\") {\n    try {\n      await cors(req, res);\n      const data = req.body;\n      const getprogr = await FactoryLogic.getLogicProgram().getProgram(data.name);\n      res.json(getprogr);\n    } catch (error) {\n      return res.status(500).send(\"Could not search program \" + error.message);\n    }\n  }\n\n  if (req.method === \"POST\") {\n    try {\n      const data = req.body;\n      await cors(req, res);\n      const getad = await FactoryLogic.getLogicProgram().getProgramsByNameLetter(data.exp);\n      res.send(getad);\n    } catch (error) {\n      return res.status(500).send(\"Could not search program \" + error.mesage);\n    }\n  }\n\n  return res.status(405).json({\n    msg: \"Method not implemented\"\n  });\n}","map":{"version":3,"sources":["C:/Users/Waldemar/Desktop/APINextRadiotrasmitter/pages/api/program/getprogram.js"],"names":["cors","FactoryLogic","req","res","method","data","body","getprogr","getLogicProgram","getProgram","name","json","error","status","send","message","getad","getProgramsByNameLetter","exp","mesage","msg"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAAQC,YAAR,QAA2B,0DAA3B;AAEA,eAAe,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACvC,MAAGD,GAAG,CAACE,MAAJ,KAAa,KAAhB,EACA;AACE,QACA;AACA,YAAMJ,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AACA,YAAME,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,YAAMC,QAAQ,GAAC,MAAMN,YAAY,CAACO,eAAb,GAA+BC,UAA/B,CAA0CJ,IAAI,CAACK,IAA/C,CAArB;AACAP,MAAAA,GAAG,CAACQ,IAAJ,CAASJ,QAAT;AACC,KAND,CAOA,OAAOK,KAAP,EAAc;AACZ,aAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8BAA4BF,KAAK,CAACG,OAAvD,CAAP;AACD;AACF;;AACD,MAAGb,GAAG,CAACE,MAAJ,KAAa,MAAhB,EACA;AACE,QACA;AACF,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,YAAMN,IAAI,CAACE,GAAD,EAAMC,GAAN,CAAV;AACA,YAAMa,KAAK,GAAC,MAAMf,YAAY,CAACO,eAAb,GAA+BS,uBAA/B,CAAuDZ,IAAI,CAACa,GAA5D,CAAlB;AACAf,MAAAA,GAAG,CAACW,IAAJ,CAASE,KAAT;AACG,KAND,CAOF,OAAOJ,KAAP,EAAc;AACZ,aAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8BAA4BF,KAAK,CAACO,MAAvD,CAAP;AACC;AACF;;AACC,SAAOhB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAES,IAAAA,GAAG,EAAE;AAAP,GAArB,CAAP;AACD","sourcesContent":["import cors from \"../cors\";\r\nimport {FactoryLogic} from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\r\n\r\nexport default async function (req, res) {\r\n  if(req.method===\"GET\")\r\n  {\r\n    try\r\n    {\r\n    await cors(req, res)\r\n    const data = req.body;\r\n    const getprogr=await FactoryLogic.getLogicProgram().getProgram(data.name);\r\n    res.json(getprogr);\r\n    }\r\n    catch (error) {\r\n      return res.status(500).send(\"Could not search program \"+error.message);\r\n    }\r\n  }\r\n  if(req.method===\"POST\")\r\n  {\r\n    try\r\n    {\r\n  const data = req.body;\r\n  await cors(req, res)\r\n  const getad=await FactoryLogic.getLogicProgram().getProgramsByNameLetter(data.exp);\r\n  res.send(getad);\r\n    }\r\n  catch (error) {\r\n    return res.status(500).send(\"Could not search program \"+error.mesage);\r\n    }\r\n  }\r\n    return res.status(405).json({ msg: \"Method not implemented\"});\r\n  }\r\n\r\n  "]},"metadata":{},"sourceType":"module"}