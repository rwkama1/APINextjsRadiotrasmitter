{"ast":null,"code":"import cors from \"../cors\";\nimport { FactoryLogic } from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\nimport { Advertiser } from \"radiotrasmitter/RadioTransmitter/dist/shared/entityshared/Advertiser\";\nexport default async function (req, res) {\n  if (req.method === \"GET\") {\n    await cors(req, res);\n    const list = await FactoryLogic.getLogicAdvertiser().getAdvertisers();\n    res.send(list);\n  } //POSTMAN\n  //POST\n  //http://localhost:3000/api/advertiser/advertiser\n  //Body> Raw > JSON\n  //{\n  //     \"rut\": 1234567890,\n  //     \"name\": \"sdafsdgdsg\",\n  //     \"address\": \"dsgdsgdsg\",\n  //     \"phone\": \"46789978987\"\n\n\n  if (req.method === \"POST\") {\n    await cors(req, res);\n\n    try {\n      const data = req.body;\n      const dtadvertiser = new Advertiser(data.rut, data.name, data.address, data.phone);\n      const addadvert = await FactoryLogic.getLogicAdvertiser().addAdvertiser(dtadvertiser);\n      return res.status(200).json({\n        status: \"Success\"\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not add advertiser\",\n          error: error.toString()\n        }\n      });\n    }\n  }\n\n  if (req.method === \"PUT\") {\n    await cors(req, res);\n\n    try {\n      const data = req.body;\n      const dtadvertiser = new Advertiser(data.rut, data.name, data.address, data.phone);\n      const updadvert = await FactoryLogic.getLogicAdvertiser().updateAdvertiser(dtadvertiser);\n      return res.status(200).json({\n        status: \"Success\"\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not update advertiser\",\n          error: error.toString()\n        }\n      });\n    }\n  }\n\n  if (req.method === \"DELETE\") {\n    await cors(req, res);\n    const data = req.body;\n\n    try {\n      const dtadvertiser = new Advertiser(data.rut, \"\", \"\", \"\");\n      const deladv = await FactoryLogic.getLogicAdvertiser().deleteAdvertiser(dtadvertiser);\n      return res.status(200).json({\n        status: \"Success\"\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          error: error.toString()\n        }\n      });\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Waldemar/Desktop/APINextRadiotrasmitter/pages/api/advertiser/advertiser.js"],"names":["cors","FactoryLogic","Advertiser","req","res","method","list","getLogicAdvertiser","getAdvertisers","send","data","body","dtadvertiser","rut","name","address","phone","addadvert","addAdvertiser","status","json","error","msg","toString","updadvert","updateAdvertiser","deladv","deleteAdvertiser"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAAQC,YAAR,QAA2B,0DAA3B;AACA,SAAQC,UAAR,QAAyB,sEAAzB;AAEA,eAAe,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACvC,MAAGD,GAAG,CAACE,MAAJ,KAAa,KAAhB,EACA;AACE,UAAML,IAAI,CAACG,GAAD,EAAMC,GAAN,CAAV;AACA,UAAME,IAAI,GAAC,MAAML,YAAY,CAACM,kBAAb,GAAkCC,cAAlC,EAAjB;AACAJ,IAAAA,GAAG,CAACK,IAAJ,CAASH,IAAT;AACD,GANsC,CAQvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAGH,GAAG,CAACE,MAAJ,KAAa,MAAhB,EACA;AACE,UAAML,IAAI,CAACG,GAAD,EAAMC,GAAN,CAAV;;AACA,QACA;AACA,YAAMM,IAAI,GAAGP,GAAG,CAACQ,IAAjB;AACA,YAAMC,YAAY,GAAC,IAAIV,UAAJ,CAAeQ,IAAI,CAACG,GAApB,EAAwBH,IAAI,CAACI,IAA7B,EAAkCJ,IAAI,CAACK,OAAvC,EAA+CL,IAAI,CAACM,KAApD,CAAnB;AACA,YAAMC,SAAS,GAAC,MAAMhB,YAAY,CAACM,kBAAb,GAAkCW,aAAlC,CAAgDN,YAAhD,CAAtB;AACA,aAAOR,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,QAAAA,MAAM,EAAE;AAAV,OAArB,CAAP;AACC,KAND,CAOA,OAAOE,KAAP,EAAc;AACZ,aAAOjB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1BT,QAAAA,IAAI,EAAE;AAAEY,UAAAA,GAAG,EAAE,0BAAP;AAAmCD,UAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN;AAA1C;AAFoB,OAArB,CAAP;AAID;AACF;;AACD,MAAGpB,GAAG,CAACE,MAAJ,KAAa,KAAhB,EACA;AACE,UAAML,IAAI,CAACG,GAAD,EAAMC,GAAN,CAAV;;AACA,QACA;AACA,YAAMM,IAAI,GAAGP,GAAG,CAACQ,IAAjB;AACA,YAAMC,YAAY,GAAC,IAAIV,UAAJ,CAAeQ,IAAI,CAACG,GAApB,EAAwBH,IAAI,CAACI,IAA7B,EAAkCJ,IAAI,CAACK,OAAvC,EAA+CL,IAAI,CAACM,KAApD,CAAnB;AACA,YAAMQ,SAAS,GAAC,MAAMvB,YAAY,CAACM,kBAAb,GAAkCkB,gBAAlC,CAAmDb,YAAnD,CAAtB;AACA,aAAOR,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,QAAAA,MAAM,EAAE;AAAV,OAArB,CAAP;AACC,KAND,CAOA,OAAOE,KAAP,EAAc;AACZ,aAAOjB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1BT,QAAAA,IAAI,EAAE;AAAEY,UAAAA,GAAG,EAAE,6BAAP;AAAsCD,UAAAA,KAAK,EAACA,KAAK,CAACE,QAAN;AAA5C;AAFoB,OAArB,CAAP;AAID;AACF;;AACD,MAAGpB,GAAG,CAACE,MAAJ,KAAa,QAAhB,EACA;AACE,UAAML,IAAI,CAACG,GAAD,EAAMC,GAAN,CAAV;AACA,UAAMM,IAAI,GAAGP,GAAG,CAACQ,IAAjB;;AACA,QACA;AAEI,YAAMC,YAAY,GAAC,IAAIV,UAAJ,CAAeQ,IAAI,CAACG,GAApB,EAAwB,EAAxB,EAA2B,EAA3B,EAA8B,EAA9B,CAAnB;AACJ,YAAMa,MAAM,GAAC,MAAMzB,YAAY,CAACM,kBAAb,GAAkCoB,gBAAlC,CAAmDf,YAAnD,CAAnB;AACA,aAAOR,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,QAAAA,MAAM,EAAE;AAAV,OAArB,CAAP;AACC,KAND,CAOA,OAAOE,KAAP,EAAc;AACZ,aAAOjB,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1BT,QAAAA,IAAI,EAAE;AAAGW,UAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN;AAAV;AAFoB,OAArB,CAAP;AAID;AACF;AACA","sourcesContent":["import cors from \"../cors\";\r\nimport {FactoryLogic} from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\r\nimport {Advertiser} from \"radiotrasmitter/RadioTransmitter/dist/shared/entityshared/Advertiser\";\r\n\r\nexport default async function (req, res) {\r\n  if(req.method===\"GET\")\r\n  {\r\n    await cors(req, res)\r\n    const list=await FactoryLogic.getLogicAdvertiser().getAdvertisers();\r\n    res.send(list);\r\n  }\r\n\r\n  //POSTMAN\r\n  //POST\r\n  //http://localhost:3000/api/advertiser/advertiser\r\n  //Body> Raw > JSON\r\n  //{\r\n  //     \"rut\": 1234567890,\r\n  //     \"name\": \"sdafsdgdsg\",\r\n  //     \"address\": \"dsgdsgdsg\",\r\n  //     \"phone\": \"46789978987\"\r\n  if(req.method===\"POST\")\r\n  {\r\n    await cors(req, res)\r\n    try\r\n    {\r\n    const data = req.body;\r\n    const dtadvertiser=new Advertiser(data.rut,data.name,data.address,data.phone);\r\n    const addadvert=await FactoryLogic.getLogicAdvertiser().addAdvertiser(dtadvertiser);\r\n    return res.status(200).json({ status: \"Success\" });\r\n    }\r\n    catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: { msg: \"Could not add advertiser\", error: error.toString() }\r\n      });\r\n    }\r\n  }\r\n  if(req.method===\"PUT\")\r\n  {\r\n    await cors(req, res)\r\n    try\r\n    {\r\n    const data = req.body;\r\n    const dtadvertiser=new Advertiser(data.rut,data.name,data.address,data.phone);\r\n    const updadvert=await FactoryLogic.getLogicAdvertiser().updateAdvertiser(dtadvertiser);\r\n    return res.status(200).json({ status: \"Success\" });\r\n    }\r\n    catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: { msg: \"Could not update advertiser\", error:error.toString() }\r\n      });\r\n    }\r\n  }\r\n  if(req.method===\"DELETE\")\r\n  {\r\n    await cors(req, res);\r\n    const data = req.body;\r\n    try\r\n    {\r\n  \r\n        const dtadvertiser=new Advertiser(data.rut,\"\",\"\",\"\");\r\n    const deladv=await FactoryLogic.getLogicAdvertiser().deleteAdvertiser(dtadvertiser);\r\n    return res.status(200).json({ status: \"Success\" });\r\n    }\r\n    catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: {  error: error.toString() }\r\n      });\r\n    }\r\n  }\r\n  }\r\n\r\n  "]},"metadata":{},"sourceType":"module"}