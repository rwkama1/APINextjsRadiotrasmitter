{"ast":null,"code":"import cors from \"../cors\";\nimport { FactoryLogic } from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\nimport { ECampaign } from \"radiotrasmitter/RadioTransmitter/dist/shared/entityshared/ECampaign\";\nexport default async function (req, res) {\n  if (req.method === \"GET\") {\n    const {\n      ptitle\n    } = req.query;\n    await cors(req, res);\n    const camp = await FactoryLogic.getLogicCampaign().getCampaign(ptitle);\n    res.send(camp);\n  }\n\n  if (req.method === \"POST\") {\n    await cors(req, res);\n\n    try {\n      const data = req.body;\n      const getad = await FactoryLogic.getLogicAdvertiser().getAdvertiser(data.rut);\n      const dtcamp = new ECampaign(data.title, data.datei, data.datef, data.duration, data.mentions, getad, data.producer, []);\n      await FactoryLogic.getLogicCampaign().addCampaign(dtcamp);\n      return res.status(200).json({\n        status: \"Success\"\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not add campaign\",\n          error: error.toString()\n        }\n      });\n    }\n  }\n\n  if (req.method === \"PUT\") {\n    await cors(req, res);\n\n    try {\n      const data = req.body;\n      const getad = await FactoryLogic.getLogicAdvertiser().getAdvertiser(data.rut);\n      const dtcamp = new ECampaign(data.title, data.datei, data.datef, data.duration, data.mentions, getad, data.producer, []);\n      await FactoryLogic.getLogicCampaign().updateCampaign(dtcamp);\n      return res.status(200).json({\n        status: \"Success\"\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not update campaign\",\n          error: error.toString()\n        }\n      });\n    }\n  }\n\n  if (req.method === \"DELETE\") {\n    await cors(req, res);\n    const data = req.body;\n\n    try {\n      const dtcamp = new ECampaign(data.title, \"\", \"\", 0, 0, null, \"\", []);\n      await FactoryLogic.getLogicCampaign().deleteCampaign(dtcamp);\n      return res.status(200).json({\n        status: \"Success\"\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          error: error.toString()\n        }\n      });\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Waldemar/Desktop/APINextRadiotrasmitter/pages/api/campaign/ecampaign.js"],"names":["cors","FactoryLogic","ECampaign","req","res","method","ptitle","query","camp","getLogicCampaign","getCampaign","send","data","body","getad","getLogicAdvertiser","getAdvertiser","rut","dtcamp","title","datei","datef","duration","mentions","producer","addCampaign","status","json","error","msg","toString","updateCampaign","deleteCampaign"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAAQC,YAAR,QAA2B,0DAA3B;AACA,SAAQC,SAAR,QAAwB,qEAAxB;AAEA,eAAe,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AAEvC,MAAGD,GAAG,CAACE,MAAJ,KAAa,KAAhB,EACA;AACE,UAAM;AAAEC,MAAAA;AAAF,QAAaH,GAAG,CAACI,KAAvB;AACA,UAAMP,IAAI,CAACG,GAAD,EAAMC,GAAN,CAAV;AACA,UAAMI,IAAI,GAAC,MAAMP,YAAY,CAACQ,gBAAb,GAAgCC,WAAhC,CAA4CJ,MAA5C,CAAjB;AACAF,IAAAA,GAAG,CAACO,IAAJ,CAASH,IAAT;AACD;;AAGD,MAAGL,GAAG,CAACE,MAAJ,KAAa,MAAhB,EACA;AACE,UAAML,IAAI,CAACG,GAAD,EAAMC,GAAN,CAAV;;AACA,QACA;AACA,YAAMQ,IAAI,GAAGT,GAAG,CAACU,IAAjB;AACA,YAAMC,KAAK,GAAC,MAAMb,YAAY,CAACc,kBAAb,GAAkCC,aAAlC,CAAgDJ,IAAI,CAACK,GAArD,CAAlB;AACA,YAAMC,MAAM,GAAC,IAAIhB,SAAJ,CAAcU,IAAI,CAACO,KAAnB,EAAyBP,IAAI,CAACQ,KAA9B,EAAoCR,IAAI,CAACS,KAAzC,EAA+CT,IAAI,CAACU,QAApD,EAA6DV,IAAI,CAACW,QAAlE,EAA2ET,KAA3E,EAAiFF,IAAI,CAACY,QAAtF,EAA+F,EAA/F,CAAb;AACD,YAAMvB,YAAY,CAACQ,gBAAb,GAAgCgB,WAAhC,CAA4CP,MAA5C,CAAN;AACC,aAAOd,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,QAAAA,MAAM,EAAE;AAAV,OAArB,CAAP;AACC,KAPD,CAQA,OAAOE,KAAP,EAAc;AACZ,aAAOxB,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1Bd,QAAAA,IAAI,EAAE;AAAEiB,UAAAA,GAAG,EAAE,wBAAP;AAAiCD,UAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN;AAAxC;AAFoB,OAArB,CAAP;AAID;AACF;;AACD,MAAG3B,GAAG,CAACE,MAAJ,KAAa,KAAhB,EACA;AACE,UAAML,IAAI,CAACG,GAAD,EAAMC,GAAN,CAAV;;AACA,QACA;AACA,YAAMQ,IAAI,GAAGT,GAAG,CAACU,IAAjB;AACA,YAAMC,KAAK,GAAC,MAAMb,YAAY,CAACc,kBAAb,GAAkCC,aAAlC,CAAgDJ,IAAI,CAACK,GAArD,CAAlB;AACA,YAAMC,MAAM,GAAC,IAAIhB,SAAJ,CAAcU,IAAI,CAACO,KAAnB,EAAyBP,IAAI,CAACQ,KAA9B,EAAoCR,IAAI,CAACS,KAAzC,EAA+CT,IAAI,CAACU,QAApD,EAA6DV,IAAI,CAACW,QAAlE,EAA2ET,KAA3E,EAAiFF,IAAI,CAACY,QAAtF,EAA+F,EAA/F,CAAb;AACA,YAAMvB,YAAY,CAACQ,gBAAb,GAAgCsB,cAAhC,CAA+Cb,MAA/C,CAAN;AACA,aAAOd,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,QAAAA,MAAM,EAAE;AAAV,OAArB,CAAP;AACC,KAPD,CAQA,OAAOE,KAAP,EAAc;AACZ,aAAOxB,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1Bd,QAAAA,IAAI,EAAE;AAAEiB,UAAAA,GAAG,EAAE,2BAAP;AAAoCD,UAAAA,KAAK,EAACA,KAAK,CAACE,QAAN;AAA1C;AAFoB,OAArB,CAAP;AAID;AACF;;AACD,MAAG3B,GAAG,CAACE,MAAJ,KAAa,QAAhB,EACA;AACE,UAAML,IAAI,CAACG,GAAD,EAAMC,GAAN,CAAV;AACA,UAAMQ,IAAI,GAAGT,GAAG,CAACU,IAAjB;;AACA,QACA;AAEE,YAAMK,MAAM,GAAC,IAAIhB,SAAJ,CAAcU,IAAI,CAACO,KAAnB,EAAyB,EAAzB,EAA4B,EAA5B,EAA+B,CAA/B,EAAiC,CAAjC,EAAmC,IAAnC,EAAwC,EAAxC,EAA2C,EAA3C,CAAb;AACF,YAAMlB,YAAY,CAACQ,gBAAb,GAAgCuB,cAAhC,CAA+Cd,MAA/C,CAAN;AAEA,aAAOd,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,QAAAA,MAAM,EAAE;AAAV,OAArB,CAAP;AACC,KAPD,CAQA,OAAOE,KAAP,EAAc;AACZ,aAAOxB,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1Bd,QAAAA,IAAI,EAAE;AAAGgB,UAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN;AAAV;AAFoB,OAArB,CAAP;AAID;AACF;AACA","sourcesContent":["import cors from \"../cors\";\r\nimport {FactoryLogic} from \"radiotrasmitter/RadioTransmitter/dist/logic/FactoryLogic\";\r\nimport {ECampaign} from \"radiotrasmitter/RadioTransmitter/dist/shared/entityshared/ECampaign\";\r\n\r\nexport default async function (req, res) {\r\n\r\n  if(req.method===\"GET\")\r\n  {\r\n    const { ptitle } = req.query;\r\n    await cors(req, res)\r\n    const camp=await FactoryLogic.getLogicCampaign().getCampaign(ptitle);\r\n    res.send(camp);\r\n  }\r\n\r\n\r\n  if(req.method===\"POST\")\r\n  {\r\n    await cors(req, res)\r\n    try\r\n    {\r\n    const data = req.body;\r\n    const getad=await FactoryLogic.getLogicAdvertiser().getAdvertiser(data.rut);\r\n    const dtcamp=new ECampaign(data.title,data.datei,data.datef,data.duration,data.mentions,getad,data.producer,[]);\r\n   await FactoryLogic.getLogicCampaign().addCampaign(dtcamp);\r\n    return res.status(200).json({ status: \"Success\" });\r\n    }\r\n    catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: { msg: \"Could not add campaign\", error: error.toString() }\r\n      });\r\n    }\r\n  }\r\n  if(req.method===\"PUT\")\r\n  {\r\n    await cors(req, res)\r\n    try\r\n    {\r\n    const data = req.body;\r\n    const getad=await FactoryLogic.getLogicAdvertiser().getAdvertiser(data.rut);\r\n    const dtcamp=new ECampaign(data.title,data.datei,data.datef,data.duration,data.mentions,getad,data.producer,[]);\r\n    await FactoryLogic.getLogicCampaign().updateCampaign(dtcamp);\r\n    return res.status(200).json({ status: \"Success\" });\r\n    }\r\n    catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: { msg: \"Could not update campaign\", error:error.toString() }\r\n      });\r\n    }\r\n  }\r\n  if(req.method===\"DELETE\")\r\n  {\r\n    await cors(req, res);\r\n    const data = req.body;\r\n    try\r\n    {\r\n  \r\n      const dtcamp=new ECampaign(data.title,\"\",\"\",0,0,null,\"\",[]);\r\n    await FactoryLogic.getLogicCampaign().deleteCampaign(dtcamp);\r\n\r\n    return res.status(200).json({ status: \"Success\" });\r\n    }\r\n    catch (error) {\r\n      return res.status(500).json({\r\n        status: \"Error\",\r\n        data: {  error: error.toString() }\r\n      });\r\n    }\r\n  }\r\n  }\r\n\r\n "]},"metadata":{},"sourceType":"module"}